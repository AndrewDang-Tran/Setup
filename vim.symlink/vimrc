" Exploration TODO:
" lightline / statusline
" tab autocomplete
" vim-test plugin
" projectionist plugin
" harpoon plugin
" telescope plugin
"

""""""""""""
" GENERAL
""""""""""""
let mapleader=" "
nnoremap <leader>r :source ~/.vim/vimrc<cr>
nnoremap <leader>e :e ~/.vim/vimrc<cr>
nnoremap <leader>ze :e ~/.zshrc<cr>
nnoremap <leader>zr :source ~/.zshrc<cr>
nnoremap <leader>te :e ~/.tmux.conf<cr>
nnoremap <leader>tr :tmux source-file ~/.tmux.conf<cr>

" Setup vim plugin manager ------------------
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()

" FZF
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" LSP
Plug 'neoclide/coc.nvim', {'branch': 'release'}
" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Syntax
Plug 'rust-lang/rust.vim'
let g:rustfmt_autosave = 1

" Terminal
Plug 'voldikss/vim-floaterm'

" Comments
Plug 'tpope/vim-commentary'

" Misc

call plug#end()

" Floaterm
nnoremap <silent> +  :FloatermNew<CR>
nnoremap <silent> <C-s> :FloatermToggle<CR>
tnoremap <silent> <C-s> <C-\><C-n>:FloatermToggle<CR>
autocmd ExitPre * :FloatermKill!

" File --------------------------------
set rtp+=~/.fzf
nnoremap <silent> <C-f> :Files<CR>
map gf :edit <cfile><cr>

" Colors -------------------------------------
set t_Co=256
syntax enable
set background=dark
colorscheme OceanicNext "install color scheme

" Spaces & Tabs ------------------------------
set tabstop=2
set softtabstop=2 " number of spaces in tab
set expandtab " tabs are spaces
set shiftwidth=2
vnoremap < <gv
vnoremap > >gv
set list lcs=eol:¬,trail:·,tab:▸▸▸
autocmd FileType php setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd BufNewFile,BufRead *.twig set syntax=html
autocmd FileType html setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType js setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType tex setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType rb setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType sh setlocal shiftwidth=4 tabstop=4 softtabstop=4

" UI Layout ----------------------------------
set number
set cursorline
filetype plugin indent on
set wildmenu " visual autocomplete for command menu
set showmatch " match parenthesis and brackets
set history=50 " keep 50 lines of cmd line history
set ruler " show cursor at all times
set showcmd " display incomplete commands
setl tw=180 " set max # characters in a line to 120

" Searching ----------------------------------
set incsearch "search as characters are entered
set hlsearch
nnoremap n nzzzv
nnoremap N Nzzzv

" Deleting -----------------------------------
set backspace=indent,eol,start

" Folding ------------------------------------
set foldenable
set foldlevelstart=10 " opens most folds depending on line size
set foldmethod=indent " fold based on indents

" Movement -----------------------------------
"  move through lines visually
nnoremap j gj
nnoremap k gk

" Sets movement through split windows with the ctrl + hjkl keys
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-l> :wincmd l<CR>

" Formatting  ---------------------------------
com! FormatJSON %!jq
" will add comma to end of line if it doesn't exist
" I used the vim negative look behind documented at
" https://vim.fandom.com/wiki/Regex_lookahead_and_lookbehind
vmap , :s/\(,\)\@<!$/,/g<CR>:let @/ = ""<CR>
autocmd BufWritePre * :%s/\s\+$//e

" Line Shortcuts -----------------------------

" Leader Shortcuts ---------------------------
cmap w!! w !sudo tee > /dev/null %

" Statusline ----------------------------------

" Copy Paste --------------------------------------
vnoremap <leader>y "+y
nnoremap <leader>p "+p
vnoremap <leader>p "+p

" Syntastic ----------------------------------

" Launch Config ------------------------------
set hidden " Control when I want to write a file

" in insert mode, "ts" -> "2018-08-03"
iab <expr> ts strftime("%F")

" Backups ------------------------------------
"set backup
"set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
"set backupskip=/tmp/*,/private/tmp/*
set ndodir=~/.vim/undodir
set undofile
set directory=.,$TEMP
set writebackup

